name: build

on: [push, pull_request, workflow_dispatch]

env:
  LPRunUrl: https://www.linqpad.net/GetFile.aspx?preview+LINQPad8-Beta.zip
  LPRun: LPRun8-x64.exe --% -fx=9.0
  CompileOnly: -compileonly
  PSHeader: |
    $ErrorActionPreference = 'Stop'
    $Verbose = $VerbosePreference -ne 'SilentlyContinue'
  PSClearClipboard: |
    '' | Set-Clipboard
  PSAssertClipboard: |
    Get-Clipboard
    if(-not $(Get-Clipboard -Raw).Trim()){ throw "Clipboard is empty" }
  PSAssertClipboardEventStock: |
    Get-Clipboard
    if($(Get-Clipboard).Length -le (4 + 8)){ throw "Event stock parsing failed" }
  PSAssertModules: |
    if((Get-Content -Raw ./data/Operators.tsv).Split("`n", [StringSplitOptions]::RemoveEmptyEntries -bor [StringSplitOptions]::TrimEntries) -join "`n" -ne ($(Get-Clipboard) -join "`n")){ throw "Modules have been updated" }
  RETENTION_DAYS: 30

jobs:
  build:
    runs-on: windows-latest

    steps:

      # Set up

      - name: Setup .NET
        uses: actions/setup-dotnet@v4.2.0
        with:
          dotnet-version: |
            9.0.x

      # Set up LPRun

      - name: Set up LPRun
        uses: Alex079/setup-custom-tool@v2.0.0
        with:
          archiveUrl: ${{env.LPRunUrl}}

      # Check out

      - name: Check out
        uses: actions/checkout@v4.2.2

      # Execute LPRun scripts

      - name: Execute EventStatus.linq
        if: ${{success() || failure()}}
        run: ${{env.LPRun}} EventStatus.linq

      - name: Execute EventStockScraper.linq
        if: ${{success() || failure()}}
        run: |
          ${{env.PSHeader}}
          ${{env.PSClearClipboard}}
          ${{env.LPRun}} EventStockScraper.linq
          ${{env.PSAssertClipboardEventStock}}

      - name: Compile Hourglass.linq
        if: ${{success() || failure()}}
        run: ${{env.LPRun}} ${{env.CompileOnly}} Hourglass.linq

      - name: Execute OperationStrategies.linq
        if: ${{success() || failure()}}
        run: ${{env.LPRun}} OperationStrategies.linq

      - name: Execute OperatorModules.linq
        if: ${{success() || failure()}}
        run: ${{env.LPRun}} OperatorModules.linq

      - name: Execute OperatorModulesScraper.linq
        if: ${{success() || failure()}}
        run: |
          ${{env.PSHeader}}
          ${{env.PSClearClipboard}}
          ${{env.LPRun}} OperatorModulesScraper.linq
          ${{env.PSAssertClipboard}}
          ${{env.PSAssertModules}}

      - name: Execute OriginitePrimePacks.linq
        if: ${{success() || failure()}}
        run: ${{env.LPRun}} OriginitePrimePacks.linq

      - name: Archive current event
        run: |
          ${{env.PSHeader}}
          $eventName = $("Arknights-$((git show-branch --no-name HEAD).Trim() -replace ' event$','' -replace ' ','_')")
          git checkout-index -a -f --prefix=./$eventName/
          Remove-Item $eventName/.github -Force -Recurse
          7z -tzip -mx=9 a $eventName $eventName/*

      - name: Upload current event
        uses: actions/upload-artifact@v4.4.3
        with:
          name: CurrentEvent
          path: |
            *.zip
          compression-level: 0
          retention-days: ${{env.RETENTION_DAYS}}
