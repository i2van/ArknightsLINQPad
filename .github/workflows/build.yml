name: build

on: [push, pull_request]

env:
  LPRunUrl: https://www.linqpad.net/GetFile.aspx?preview+LINQPad8-Beta.zip
  LPRun: LPRun8-x64.exe
  PSHeader: |
    $ErrorActionPreference = 'Stop'
    $Verbose = $VerbosePreference -ne 'SilentlyContinue'
  PSClearClipboard: |
    '' | Set-Clipboard
  PSAssertClipboard: |
    Get-Clipboard
    if(-not $(Get-Clipboard -Raw).Trim()){ throw "Clipboard is empty" }
  PSAssertModules: |
    (Get-Content -Raw ./lib/Operators.linq) -match '\s+Operators\s+Value\s*=\s*new\s*\("""([^"]+)' | Out-Null
    if($Matches[1].Split("`n", [StringSplitOptions]::RemoveEmptyEntries -bor [StringSplitOptions]::TrimEntries) -join "`n" -ne ($(Get-Clipboard) -join "`n")){ throw "Modules have been updated" }

jobs:
  build:
    runs-on: windows-latest

    steps:

      # Set up LPRun

      - name: Set up LPRun
        uses: Alex079/setup-custom-tool@v2.0.0
        with:
          archiveUrl: ${{env.LPRunUrl}}

      # Check out

      - name: Check out
        uses: actions/checkout@v4.1.1

      # Execute LPRun scripts

      - name: Execute EventStatus.linq
        run:  ${{env.LPRun}} EventStatus.linq

      - name: Execute EventStockParser.linq
        run: |
          ${{env.PSHeader}}
          ${{env.PSClearClipboard}}
          ${{env.LPRun}} EventStockParser.linq
          ${{env.PSAssertClipboard}}

      - name: Execute OperatorModules.linq
        run:  ${{env.LPRun}} OperatorModules.linq

      - name: Execute OperatorModulesParser.linq
        run: |
          ${{env.PSHeader}}
          ${{env.PSClearClipboard}}
          ${{env.LPRun}} OperatorModulesParser.linq
          ${{env.PSAssertClipboard}}
          ${{env.PSAssertModules}}

      - name: Execute OriginitePrimePacks.linq
        run:  ${{env.LPRun}} OriginitePrimePacks.linq
